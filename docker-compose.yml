volumes:
  n8n_storage:
  postgres_storage:
  qdrant_storage:
  proxy_storage:
  cert_storage:
  
networks:
  n8work:

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['n8work']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_PROXY_HOPS=1
    - N8N_PROTOCOL=https
    - VUE_APP_URL_BASE_API=https://${N8N_HOST}
    - WEBHOOK_URL=https://${N8N_HOST}
  links:
    - postgres
  depends_on:
    postgres:
      condition: service_healthy

services:
  https-portal:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - proxy_storage:/data
      - cert_storage:/etc/letsencrypt
    environment:
      INITIAL_ADMIN_EMAIL: ${NGINX_PROXY_MANAGER_EMAIL}
      INITIAL_ADMIN_PASSWORD: ${NGINX_PROXY_MANAGER_PASSWORD}
    networks: ['n8work']

  postgres:
    image: postgres:16-alpine
    networks: ['n8work']
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: ['n8work']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage
